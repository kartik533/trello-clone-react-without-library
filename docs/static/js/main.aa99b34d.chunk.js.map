{"version":3,"sources":["App.module.scss","components/card-container/CardsContainer.module.scss","components/card-builder/CardBuilder.module.scss","components/card/Card.module.scss","components/card/Card.jsx","components/card-builder/CardBuilder.jsx","components/card-container/CardsContainer.jsx","utils/data.jsx","App.js","index.js"],"names":["module","exports","Card","cardId","label","parentId","className","styles","card","draggable","onDragStart","evt","stopPropagation","console","log","temp","dataTransfer","setData","JSON","stringify","drag","CardBuilder","addCard","hideForm","useState","cardName","setCardName","value","onChange","e","target","trim","length","placeholder","disabled","onClick","id","uuidv4","Lists","name","cards","setCards","showCardForm","setShowCardForm","isEventRegistered","useRef","current","document","addEventListener","detail","newParentId","filter","container","onDrop","preventDefault","node","parse","getData","event","CustomEvent","dispatchEvent","handleDrop","onDragOver","map","index","newCard","push","initialLists","App","lists","setLists","listName","setListName","showListForm","setShowListForm","list","ReactDOM","render","StrictMode","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,eAAe,0BAA0B,kBAAkB,6BAA6B,eAAe,0BAA0B,sBAAsB,mC,mBCAhMD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,eAAe,uC,gBCA/ED,EAAOC,QAAU,CAAC,eAAe,kCAAkC,iBAAiB,sC,kBCApFD,EAAOC,QAAU,CAAC,KAAO,qB,0LC2BVC,EAxBF,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAa1B,OACI,qBACIC,UAAWC,IAAOC,KAClBC,WAAW,EACXC,YAAa,SAACC,GAAD,OAfR,SAACA,GACVA,EAAIC,kBACJC,QAAQC,IAAI,gBACZ,IAAIC,EAAO,CACPZ,SACAC,QACAC,YAEJM,EAAIK,aAAaC,QAAQ,KAAMC,KAAKC,UAAUJ,IAOpBK,CAAKT,IAH/B,SAKKP,K,wBC6BEiB,EA/CK,SAAC,GAAmC,IAAlChB,EAAiC,EAAjCA,SAAUiB,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAErC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAoBA,OACI,sBAAKpB,UAAWC,IAAO,gBAAvB,UACI,kCACI,uBACIoB,MAAOF,EACPG,SAAU,SAACC,GAvBH,IAACF,EACO,KADPA,EAuBwBE,EAAEC,OAAOH,OAtB5CI,OAAOC,OAIjBN,EAAYC,GAHRD,EAAY,KAsBJO,YAAY,sCAGpB,sBAAK3B,UAAWC,IAAO,kBAAvB,UACI,wBACI2B,SAAuB,KAAbT,EACVU,QAtBG,WAEfb,EAAQ,CACJc,GAAIC,cACJjC,MAAOqB,EACPpB,SAAUA,IAEdqB,EAAY,KAaJ,sBAKA,wBACIS,QAASZ,EADb,sBCuCDe,EA3ED,SAAC,GAAgB,IAAfF,EAAc,EAAdA,GAAIG,EAAU,EAAVA,KAEhB,EAA0Bf,mBAAS,IAAnC,mBAAOgB,EAAP,KAAcC,EAAd,KACA,EAAwCjB,oBAAS,GAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KACIC,EAAoBC,kBAAO,GAqC/B,OAXKD,EAAkBE,UACnBC,SAASC,iBAAiB,eAAe,SAACrC,GAEtC,GADAE,QAAQC,IAAI,iBAAkByB,GAC1BH,IAAOzB,EAAIsC,OAAOC,YAAa,CAC/B,IAAInC,EAAOyB,EAAMW,QAAO,SAAC3C,GAAD,OAAUA,EAAK4B,KAAOzB,EAAIsC,OAAO9C,UACzDsC,EAAS1B,OAGjB6B,EAAkBE,SAAU,GAI5B,sBACIxC,UAAWC,IAAO6C,UAClBC,OAAQ,SAAA1C,GAAG,OA7BA,SAACA,GAChBA,EAAI2C,iBACJ3C,EAAIC,kBACJ,IAAI2C,EAAOrC,KAAKsC,MAAM7C,EAAIK,aAAayC,QAAQ,OAC3CjD,EAAO,CACP4B,GAAImB,EAAKpD,OACTC,MAAOmD,EAAKnD,MACZC,SAAU+B,GAEdK,GAAS,SAAAD,GAAK,4BAAQA,GAAR,CAAehC,OAC7B,IAAMkD,EAAQ,IAAIC,YAAY,cAAe,CAACV,OAAS,CAAC9C,OAAQoD,EAAKpD,OAAQ+C,YAAad,KAC1FW,SAASa,cAAcF,GACvB7C,QAAQC,IAAI,aAAcyB,GAiBPsB,CAAWlD,IAC1BmD,WAAY,SAACjC,GAAD,OAAOA,EAAEyB,kBAHzB,UAKI,6BAAKf,IACL,yBAASjC,UAAWC,IAAO,gBAA3B,SAEQiC,EAAMuB,KAAI,SAACvD,EAAMwD,GACb,OACI,cAAC,EAAD,CAEI3D,SAAU+B,EACVjC,OAAQK,EAAK4B,GACbhC,MAAOI,EAAKJ,OAHP4D,QAUpBtB,EAEK,cAAC,EAAD,CACEpB,QA1DJ,SAAC2C,GACb,IAAIlD,EAAOyB,EACXzB,EAAKmD,KAAKD,GACVxB,EAAS1B,GACT4B,GAAgB,IAuDAtC,SAAU+B,EACVb,SAAU,kBAAMoB,GAAgB,MAJlC,wBAAQR,QA1DT,kBAAMQ,GAAgB,IA0DrB,8B,gBCjDTwB,GAjBD9B,cAIAA,cAIAA,cAIAA,cAKgB,CACxB,CACID,GAAIC,cACJE,KAAM,QAEV,CACIH,GAAIC,cACJE,KAAM,iBCwCC6B,MA7Df,WACI,MAA0B5C,mBAAS2C,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgC9C,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBC,EAAjB,KACA,EAAwChD,oBAAS,GAAjD,mBAAOiD,EAAP,KAAqBC,EAArB,KAYA,OACI,sBAAKpE,UAAWC,IAAO6D,IAAvB,UACI,4CACA,sBAAK9D,UAAWC,IAAO,gBAAvB,UAEQ8D,EAAMN,KAAI,SAACY,EAAMX,GACb,OACI,cAAC,EAAD,CAEI5B,GAAIuC,EAAKvC,GACTG,KAAMoC,EAAKpC,MAFNyB,MAQhBS,EAKG,sBAAKnE,UAAWC,IAAO,gBAAvB,UACI,uBACIoB,MAAO4C,EACP3C,SAAU,SAACC,GAAD,OAAO2C,EAAY3C,EAAEC,OAAOH,QACtCM,YAAY,oCAEhB,sBAAK3B,UAAWC,IAAO,uBAAvB,UACI,wBACI2B,SAAuB,KAAbqC,EACVpC,QAxCb,WACf,IAAIpB,EAAOsD,EACXtD,EAAKmD,KAAK,CACN9B,GAAIC,cACJE,KAAMgC,IAEVD,EAASvD,GACT2D,GAAgB,IA+BQ,sBAKA,wBACIvC,QAAS,kBAAMuC,GAAgB,IADnC,qBAhBN,wBACEpE,UAAWC,IAAO,mBAClB4B,QAAS,kBAAMuC,GAAgB,IAFjC,uCClC1BE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/B,SAASgC,eAAe,W","file":"static/js/main.aa99b34d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"todo-section\":\"App_todo-section__6upaE\",\"add-list-button\":\"App_add-list-button__1Sh6D\",\"list-builder\":\"App_list-builder__2CeYx\",\"list-button-section\":\"App_list-button-section__1JEWH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsContainer_container__1ZAOI\",\"card-section\":\"CardsContainer_card-section__11cNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card-builder\":\"CardBuilder_card-builder__1lSjM\",\"button-section\":\"CardBuilder_button-section__2bqP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2KfVW\"};","import  React from 'react';\nimport styles from './Card.module.scss'\n\n// eslint-disable-next-line react/prop-types\nconst Card = ({cardId, label, parentId}) => {\n\n    const drag = (evt) => {\n        evt.stopPropagation();\n        console.log('drag started')\n        let temp = {\n            cardId,\n            label,\n            parentId\n        }\n        evt.dataTransfer.setData(\"id\", JSON.stringify(temp));\n    }\n\n    return (\n        <div\n            className={styles.card}\n            draggable={true}\n            onDragStart={(evt) => drag(evt)}\n        >\n            {label}\n        </div>\n    )\n}\n\nexport default Card;","import React, {useState} from 'react'\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './CardBuilder.module.scss'\n\n// eslint-disable-next-line react/prop-types\nconst CardBuilder = ({parentId, addCard, hideForm}) => {\n\n    const [cardName, setCardName] = useState('');\n\n    const cardNameHandler = (value) => {\n        if (value.trim().length === 0) {\n            setCardName('')\n            return\n        }\n        setCardName(value)\n    }\n\n    const addNewCard = () => {\n        // eslint-disable-next-line react/prop-types\n        addCard({\n            id: uuidv4(),\n            label: cardName,\n            parentId: parentId\n        })\n        setCardName('')\n    }\n\n    return (\n        <div className={styles['card-builder']}>\n            <section>\n                <input\n                    value={cardName}\n                    onChange={(e) => cardNameHandler(e.target.value)}\n                    placeholder=\"Enter the title of this card...\"\n                />\n            </section>\n            <div className={styles['button-section']}>\n                <button\n                    disabled={cardName === ''}\n                    onClick={addNewCard}>\n                    Add Card\n                </button>\n                <button\n                    onClick={hideForm}>\n                    X\n                </button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default CardBuilder;","import React, {useRef, useState} from 'react';\nimport styles from './CardsContainer.module.scss'\nimport Card from \"../card/Card\";\nimport CardBuilder from \"../card-builder/CardBuilder\";\n\n// eslint-disable-next-line react/prop-types\nconst Lists = ({id, name}) => {\n\n    const [cards, setCards] = useState([]);\n    const [showCardForm, setShowCardForm] = useState(false);\n    let isEventRegistered = useRef(false);\n\n    const showForm = () => setShowCardForm(true);\n\n    const addCard = (newCard) => {\n        let temp = cards;\n        temp.push(newCard)\n        setCards(temp);\n        setShowCardForm(false)\n    }\n\n    const handleDrop = (evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        let node = JSON.parse(evt.dataTransfer.getData('id'));\n        let card = {\n            id: node.cardId,\n            label: node.label,\n            parentId: id\n        }\n        setCards(cards => [...cards, card]);\n        const event = new CustomEvent('dropSuccess', {detail : {cardId: node.cardId, newParentId: id}});\n        document.dispatchEvent(event);\n        console.log('dropped to', name)\n    }\n\n    if (!isEventRegistered.current) {\n        document.addEventListener('dropSuccess', (evt) => {\n            console.log('triggering in ', name)\n            if (id !== evt.detail.newParentId) {\n                let temp = cards.filter((card) => card.id !== evt.detail.cardId)\n                setCards(temp);\n            }\n        })\n        isEventRegistered.current = true\n    }\n\n    return (\n        <div\n            className={styles.container}\n            onDrop={evt => handleDrop(evt)}\n            onDragOver={(e) => e.preventDefault()}>\n            {/* eslint-disable-next-line react/prop-types */}\n            <h3>{name}</h3>\n            <section className={styles['card-section']}>\n                {\n                    cards.map((card, index) => {\n                        return (\n                            <Card\n                                key={index}\n                                parentId={id}\n                                cardId={card.id}\n                                label={card.label}\n                            />\n                        )\n                    })\n                }\n            </section>\n            {\n                !showCardForm\n                    ? <button onClick={showForm}>+ Add a Card</button>\n                    : <CardBuilder\n                        addCard={addCard}\n                        parentId={id}\n                        hideForm={() => setShowCardForm(false)}\n                    />\n            }\n        </div>\n    )\n}\n\nexport default Lists;","import { v4 as uuidv4 } from 'uuid';\n\nexport const initialCards = [\n    {\n        id: uuidv4(),\n        label: \"First Card\",\n    },\n    {\n        id: uuidv4(),\n        label: \"Second Card\",\n    },\n    {\n        id: uuidv4(),\n        label: \"3rd Card\",\n    },\n    {\n        id: uuidv4(),\n        label: \"4th Card\",\n    }\n]\n\nexport const initialLists = [\n    {\n        id: uuidv4(),\n        name: \"Todo\"\n    },\n    {\n        id: uuidv4(),\n        name: \"In Progress\"\n    }\n]","import './App.css';\nimport Lists from \"./components/card-container/CardsContainer\";\nimport React, {useState} from \"react\";\nimport styles from './App.module.scss'\nimport {initialLists} from \"./utils/data\";\nimport {v4 as uuidv4} from \"uuid\";\n\nfunction App() {\n    const [lists, setLists] = useState(initialLists)\n    const [listName, setListName] = useState('')\n    const [showListForm, setShowListForm] = useState(false)\n\n    const addNewList = () => {\n        let temp = lists;\n        temp.push({\n            id: uuidv4(),\n            name: listName\n        })\n        setLists(temp)\n        setShowListForm(false)\n    }\n\n    return (\n        <div className={styles.App}>\n            <h2>Daily Todo</h2>\n            <div className={styles['todo-section']}>\n                {\n                    lists.map((list, index) => {\n                        return (\n                            <Lists\n                                key={index}\n                                id={list.id}\n                                name={list.name}\n                            />\n                        )\n                    })\n                }\n                {\n                    !showListForm\n                        ? <button\n                            className={styles['add-list-button']}\n                            onClick={() => setShowListForm(true)}>+ Add another List</button>\n                        :\n                        <div className={styles['list-builder']}>\n                            <input\n                                value={listName}\n                                onChange={(e) => setListName(e.target.value)}\n                                placeholder=\"Enter the title of this list...\"\n                            />\n                            <div className={styles['list-button-section']}>\n                                <button\n                                    disabled={listName === ''}\n                                    onClick={addNewList}>\n                                    Add List\n                                </button>\n                                <button\n                                    onClick={() => setShowListForm(false)}>\n                                    X\n                                </button>\n                            </div>\n                        </div>\n                }\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}